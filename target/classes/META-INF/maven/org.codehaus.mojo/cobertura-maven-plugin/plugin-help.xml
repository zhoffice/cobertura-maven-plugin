<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.3 on 2015-07-01 -->

<plugin>
  <name>Mojo&apos;s Maven plugin for Cobertura</name>
  <description>This is the Mojo&apos;s Maven plugin for Cobertura. Cobertura is a free Java tool that calculates the percentage of code accessed by tests. It can be used to identify which parts of your Java program are lacking test coverage.</description>
  <groupId>org.codehaus.mojo</groupId>
  <artifactId>cobertura-maven-plugin</artifactId>
  <version>2.8-SNAPSHOT</version>
  <goalPrefix>cobertura</goalPrefix>
  <mojos>
    <mojo>
      <goal>check</goal>
      <description>Check the coverage percentages for unit tests from the last instrumentation, and optionally fail the build if the targets are not met. To fail the build you need to set configuration/check/haltOnFailure=true in the plugin&apos;s configuration.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>verify</phase>
      <executePhase>test</executePhase>
      <executeLifecycle>cobertura</executeLifecycle>
      <implementation>org.codehaus.mojo.cobertura.CoberturaCheckMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>check</name>
          <type>org.codehaus.mojo.cobertura.configuration.ConfigCheck</type>
          <required>true</required>
          <editable>true</editable>
          <description>The Check Configuration.</description>
        </parameter>
        <parameter>
          <name>forceMojoExecution</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>true</required>
          <editable>true</editable>
          <description>Usually most of our Cobertura mojos will not get executed on parent poms. Setting this parameter to true will force the execution of this mojo, even if it would usually get skipped in this case.</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum memory to pass to the JVM for Cobertura processes.</description>
        </parameter>
        <parameter>
          <name>quiet</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Only output Cobertura errors, avoid info messages.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>When true, skip the execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <forceMojoExecution implementation="boolean" default-value="false">${cobertura.force}</forceMojoExecution>
        <maxmem implementation="java.lang.String" default-value="64m">${cobertura.maxmem}</maxmem>
        <quiet implementation="boolean" default-value="false">${quiet}</quiet>
        <skip implementation="boolean" default-value="false">${cobertura.skip}</skip>
      </configuration>
    </mojo>
    <mojo>
      <goal>check-integration-test</goal>
      <description>Check the coverage percentages for unit tests and integration tests from the last instrumentation, and optionally fail the build if the targets are not met. To fail the build you need to set configuration/check/haltOnFailure=true in the plugin&apos;s configuration.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>verify</phase>
      <executePhase>verify</executePhase>
      <executeLifecycle>cobertura</executeLifecycle>
      <implementation>org.codehaus.mojo.cobertura.CoberturaCheckIntegrationTestMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>check</name>
          <type>org.codehaus.mojo.cobertura.configuration.ConfigCheck</type>
          <required>true</required>
          <editable>true</editable>
          <description>The Check Configuration.</description>
        </parameter>
        <parameter>
          <name>forceMojoExecution</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>true</required>
          <editable>true</editable>
          <description>Usually most of our Cobertura mojos will not get executed on parent poms. Setting this parameter to true will force the execution of this mojo, even if it would usually get skipped in this case.</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum memory to pass to the JVM for Cobertura processes.</description>
        </parameter>
        <parameter>
          <name>quiet</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Only output Cobertura errors, avoid info messages.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>When true, skip the execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <forceMojoExecution implementation="boolean" default-value="false">${cobertura.force}</forceMojoExecution>
        <maxmem implementation="java.lang.String" default-value="64m">${cobertura.maxmem}</maxmem>
        <quiet implementation="boolean" default-value="false">${quiet}</quiet>
        <skip implementation="boolean" default-value="false">${cobertura.skip}</skip>
      </configuration>
    </mojo>
    <mojo>
      <goal>clean</goal>
      <description>Clean up the files that Cobertura Maven Plugin has created during instrumentation.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>clean</phase>
      <implementation>org.codehaus.mojo.cobertura.CoberturaCleanMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>forceMojoExecution</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>true</required>
          <editable>true</editable>
          <description>Usually most of our Cobertura mojos will not get executed on parent poms. Setting this parameter to true will force the execution of this mojo, even if it would usually get skipped in this case.</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum memory to pass to the JVM for Cobertura processes.</description>
        </parameter>
        <parameter>
          <name>quiet</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Only output Cobertura errors, avoid info messages.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>When true, skip the execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <forceMojoExecution implementation="boolean" default-value="false">${cobertura.force}</forceMojoExecution>
        <maxmem implementation="java.lang.String" default-value="64m">${cobertura.maxmem}</maxmem>
        <quiet implementation="boolean" default-value="false">${quiet}</quiet>
        <skip implementation="boolean" default-value="false">${cobertura.skip}</skip>
      </configuration>
    </mojo>
    <mojo>
      <goal>cobertura</goal>
      <description>Instrument the compiled classes, run the unit tests and generate a Cobertura report.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <executePhase>test</executePhase>
      <executeLifecycle>cobertura</executeLifecycle>
      <implementation>org.codehaus.mojo.cobertura.CoberturaReportMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>aggregate</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Generate aggregate reports in multi-module projects.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <since>2.4</since>
          <required>false</required>
          <editable>true</editable>
          <description>The encoding for the java source code files.</description>
        </parameter>
        <parameter>
          <name>format</name>
          <type>java.lang.String</type>
          <deprecated>No reason given</deprecated>
          <required>false</required>
          <editable>true</editable>
          <description>The format of the report. Supports &apos;html&apos; or &apos;xml&apos;. Defaults to &apos;html&apos;.</description>
        </parameter>
        <parameter>
          <name>formats</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>The formats of the report. Can be &apos;html&apos; and/or &apos;xml&apos;. Defaults to &apos;html&apos;.</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum memory to pass to the JVM for Cobertura processes.</description>
        </parameter>
        <parameter>
          <name>omitGplFiles</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to remove GPL licensed files from the generated report. This is required to distribute the report as part of a distribution, which is licensed under the ASL, or a similar license, which is incompatible with the GPL.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The output directory for the report.</description>
        </parameter>
        <parameter>
          <name>quiet</name>
          <type>boolean</type>
          <since>2.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>Only output Cobertura errors, avoid info messages.</description>
        </parameter>
      </parameters>
      <configuration>
        <aggregate implementation="boolean" default-value="false">${cobertura.aggregate}</aggregate>
        <encoding implementation="java.lang.String" default-value="UTF-8">${project.build.sourceEncoding}</encoding>
        <format implementation="java.lang.String">${cobertura.report.format}</format>
        <maxmem implementation="java.lang.String">${cobertura.maxmem}</maxmem>
        <omitGplFiles implementation="boolean" default-value="false">${cobertura.omitGplFiles}</omitGplFiles>
        <outputDirectory implementation="java.io.File" default-value="${project.reporting.outputDirectory}/cobertura"/>
        <quiet implementation="boolean" default-value="false">${quiet}</quiet>
      </configuration>
    </mojo>
    <mojo>
      <goal>cobertura-integration-test</goal>
      <description>Instrument the compiled classes, run the unit tests and integration tests and generate a Cobertura report.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <executePhase>verify</executePhase>
      <executeLifecycle>cobertura</executeLifecycle>
      <implementation>org.codehaus.mojo.cobertura.CoberturaReportIntegrationTestMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>aggregate</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Generate aggregate reports in multi-module projects.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <since>2.4</since>
          <required>false</required>
          <editable>true</editable>
          <description>The encoding for the java source code files.</description>
        </parameter>
        <parameter>
          <name>format</name>
          <type>java.lang.String</type>
          <deprecated>No reason given</deprecated>
          <required>false</required>
          <editable>true</editable>
          <description>The format of the report. Supports &apos;html&apos; or &apos;xml&apos;. Defaults to &apos;html&apos;.</description>
        </parameter>
        <parameter>
          <name>formats</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>The formats of the report. Can be &apos;html&apos; and/or &apos;xml&apos;. Defaults to &apos;html&apos;.</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum memory to pass to the JVM for Cobertura processes.</description>
        </parameter>
        <parameter>
          <name>omitGplFiles</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to remove GPL licensed files from the generated report. This is required to distribute the report as part of a distribution, which is licensed under the ASL, or a similar license, which is incompatible with the GPL.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The output directory for the report.</description>
        </parameter>
        <parameter>
          <name>quiet</name>
          <type>boolean</type>
          <since>2.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>Only output Cobertura errors, avoid info messages.</description>
        </parameter>
      </parameters>
      <configuration>
        <aggregate implementation="boolean" default-value="false">${cobertura.aggregate}</aggregate>
        <encoding implementation="java.lang.String" default-value="UTF-8">${project.build.sourceEncoding}</encoding>
        <format implementation="java.lang.String">${cobertura.report.format}</format>
        <maxmem implementation="java.lang.String">${cobertura.maxmem}</maxmem>
        <omitGplFiles implementation="boolean" default-value="false">${cobertura.omitGplFiles}</omitGplFiles>
        <outputDirectory implementation="java.io.File" default-value="${project.reporting.outputDirectory}/cobertura"/>
        <quiet implementation="boolean" default-value="false">${quiet}</quiet>
      </configuration>
    </mojo>
    <mojo>
      <goal>dump-datafile</goal>
      <description>Output the contents of Cobertura&apos;s data file to the command line.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.mojo.cobertura.CoberturaDatafileDumpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>forceMojoExecution</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>true</required>
          <editable>true</editable>
          <description>Usually most of our Cobertura mojos will not get executed on parent poms. Setting this parameter to true will force the execution of this mojo, even if it would usually get skipped in this case.</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum memory to pass to the JVM for Cobertura processes.</description>
        </parameter>
        <parameter>
          <name>quiet</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Only output Cobertura errors, avoid info messages.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>When true, skip the execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <forceMojoExecution implementation="boolean" default-value="false">${cobertura.force}</forceMojoExecution>
        <maxmem implementation="java.lang.String" default-value="64m">${cobertura.maxmem}</maxmem>
        <quiet implementation="boolean" default-value="false">${quiet}</quiet>
        <skip implementation="boolean" default-value="false">${cobertura.skip}</skip>
      </configuration>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on cobertura-maven-plugin.
Call mvn cobertura:help -Ddetail=true -Dgoal=&lt;goal-name&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.mojo.cobertura.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If true, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>instrument</goal>
      <description>Instrument the compiled classes.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.mojo.cobertura.CoberturaInstrumentMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>attach</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies whether or not to attach the Cobertura artifact to the project.</description>
        </parameter>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the classifier to use for the attached ser artifact.</description>
        </parameter>
        <parameter>
          <name>forceMojoExecution</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>true</required>
          <editable>true</editable>
          <description>Usually most of our Cobertura mojos will not get executed on parent poms. Setting this parameter to true will force the execution of this mojo, even if it would usually get skipped in this case.</description>
        </parameter>
        <parameter>
          <name>instrumentation</name>
          <type>org.codehaus.mojo.cobertura.configuration.ConfigInstrumentation</type>
          <required>false</required>
          <editable>true</editable>
          <description>The Instrumentation Configuration.</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum memory to pass to the JVM for Cobertura processes.</description>
        </parameter>
        <parameter>
          <name>quiet</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Only output Cobertura errors, avoid info messages.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>When true, skip the execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <attach implementation="boolean" default-value="false">${cobertura.attach}</attach>
        <classifier implementation="java.lang.String" default-value="cobertura">${cobertura.classifier}</classifier>
        <forceMojoExecution implementation="boolean" default-value="false">${cobertura.force}</forceMojoExecution>
        <instrumentation implementation="org.codehaus.mojo.cobertura.configuration.ConfigInstrumentation">${instrumentation}</instrumentation>
        <maxmem implementation="java.lang.String" default-value="64m">${cobertura.maxmem}</maxmem>
        <quiet implementation="boolean" default-value="false">${quiet}</quiet>
        <skip implementation="boolean" default-value="false">${cobertura.skip}</skip>
      </configuration>
    </mojo>
  </mojos>
</plugin>