<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.3 on 2015-07-01 -->

<plugin>
  <name>Mojo&apos;s Maven plugin for Cobertura</name>
  <description>This is the Mojo&apos;s Maven plugin for Cobertura. Cobertura is a free Java tool that calculates the percentage of code accessed by
    tests. It can be used to identify which parts of your Java program are lacking test coverage.</description>
  <groupId>org.codehaus.mojo</groupId>
  <artifactId>cobertura-maven-plugin</artifactId>
  <version>2.8-SNAPSHOT</version>
  <goalPrefix>cobertura</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>check</goal>
      <description>Check the coverage percentages for unit tests from the last instrumentation,
and optionally fail the build if the targets are not met. To fail the build
you need to set
&lt;code&gt;configuration/check/haltOnFailure=true&lt;/code&gt; in the plugin&apos;s
configuration.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>verify</phase>
      <executePhase>test</executePhase>
      <executeLifecycle>cobertura</executeLifecycle>
      <implementation>org.codehaus.mojo.cobertura.CoberturaCheckMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>check</name>
          <type>org.codehaus.mojo.cobertura.configuration.ConfigCheck</type>
          <required>true</required>
          <editable>true</editable>
          <description>The &lt;a href=&quot;usage.html#Check&quot;&gt;Check Configuration&lt;/a&gt;.</description>
        </parameter>
        <parameter>
          <name>dataFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;p&gt;
The Datafile Location.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>forceMojoExecution</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>true</required>
          <editable>true</editable>
          <description>Usually most of our Cobertura mojos will not get executed on parent poms.
Setting this parameter to &lt;code&gt;true&lt;/code&gt; will force
the execution of this mojo, even if it would usually get skipped in this case.</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum memory to pass to the JVM for Cobertura processes.</description>
        </parameter>
        <parameter>
          <name>mojoExecution</name>
          <type>org.apache.maven.plugin.MojoExecution</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>pluginClasspathList</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;i&gt;Maven Internal&lt;/i&gt;: List of artifacts for the plugin.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;i&gt;Maven Internal&lt;/i&gt;: Project to interact with.</description>
        </parameter>
        <parameter>
          <name>quiet</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Only output Cobertura errors, avoid info messages.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>When &lt;code&gt;true&lt;/code&gt;, skip the execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <dataFile implementation="java.io.File" default-value="${project.build.directory}/cobertura/cobertura.ser">${cobertura.datafile}</dataFile>
        <forceMojoExecution implementation="boolean" default-value="false">${cobertura.force}</forceMojoExecution>
        <maxmem implementation="java.lang.String" default-value="64m">${cobertura.maxmem}</maxmem>
        <mojoExecution implementation="org.apache.maven.plugin.MojoExecution" default-value="${mojoExecution}"/>
        <pluginClasspathList implementation="java.util.List" default-value="${plugin.artifacts}"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <quiet implementation="boolean" default-value="false">${quiet}</quiet>
        <skip implementation="boolean" default-value="false">${cobertura.skip}</skip>
      </configuration>
    </mojo>
    <mojo>
      <goal>check-integration-test</goal>
      <description>Check the coverage percentages for unit tests and integration tests from the
last instrumentation, and optionally fail the build if the targets are not
met. To fail the build you need to set
&lt;code&gt;configuration/check/haltOnFailure=true&lt;/code&gt; in the plugin&apos;s
configuration.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>verify</phase>
      <executePhase>verify</executePhase>
      <executeLifecycle>cobertura</executeLifecycle>
      <implementation>org.codehaus.mojo.cobertura.CoberturaCheckIntegrationTestMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>check</name>
          <type>org.codehaus.mojo.cobertura.configuration.ConfigCheck</type>
          <required>true</required>
          <editable>true</editable>
          <description>The &lt;a href=&quot;usage.html#Check&quot;&gt;Check Configuration&lt;/a&gt;.</description>
        </parameter>
        <parameter>
          <name>dataFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;p&gt;
The Datafile Location.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>forceMojoExecution</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>true</required>
          <editable>true</editable>
          <description>Usually most of our Cobertura mojos will not get executed on parent poms.
Setting this parameter to &lt;code&gt;true&lt;/code&gt; will force
the execution of this mojo, even if it would usually get skipped in this case.</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum memory to pass to the JVM for Cobertura processes.</description>
        </parameter>
        <parameter>
          <name>mojoExecution</name>
          <type>org.apache.maven.plugin.MojoExecution</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>pluginClasspathList</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;i&gt;Maven Internal&lt;/i&gt;: List of artifacts for the plugin.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;i&gt;Maven Internal&lt;/i&gt;: Project to interact with.</description>
        </parameter>
        <parameter>
          <name>quiet</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Only output Cobertura errors, avoid info messages.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>When &lt;code&gt;true&lt;/code&gt;, skip the execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <dataFile implementation="java.io.File" default-value="${project.build.directory}/cobertura/cobertura.ser">${cobertura.datafile}</dataFile>
        <forceMojoExecution implementation="boolean" default-value="false">${cobertura.force}</forceMojoExecution>
        <maxmem implementation="java.lang.String" default-value="64m">${cobertura.maxmem}</maxmem>
        <mojoExecution implementation="org.apache.maven.plugin.MojoExecution" default-value="${mojoExecution}"/>
        <pluginClasspathList implementation="java.util.List" default-value="${plugin.artifacts}"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <quiet implementation="boolean" default-value="false">${quiet}</quiet>
        <skip implementation="boolean" default-value="false">${cobertura.skip}</skip>
      </configuration>
    </mojo>
    <mojo>
      <goal>clean</goal>
      <description>Clean up the files that Cobertura Maven Plugin has created during
instrumentation.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>clean</phase>
      <implementation>org.codehaus.mojo.cobertura.CoberturaCleanMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>dataFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;p&gt;
The Datafile Location.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>forceMojoExecution</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>true</required>
          <editable>true</editable>
          <description>Usually most of our Cobertura mojos will not get executed on parent poms.
Setting this parameter to &lt;code&gt;true&lt;/code&gt; will force
the execution of this mojo, even if it would usually get skipped in this case.</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum memory to pass to the JVM for Cobertura processes.</description>
        </parameter>
        <parameter>
          <name>mojoExecution</name>
          <type>org.apache.maven.plugin.MojoExecution</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>pluginClasspathList</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;i&gt;Maven Internal&lt;/i&gt;: List of artifacts for the plugin.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;i&gt;Maven Internal&lt;/i&gt;: Project to interact with.</description>
        </parameter>
        <parameter>
          <name>quiet</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Only output Cobertura errors, avoid info messages.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>When &lt;code&gt;true&lt;/code&gt;, skip the execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <dataFile implementation="java.io.File" default-value="${project.build.directory}/cobertura/cobertura.ser">${cobertura.datafile}</dataFile>
        <forceMojoExecution implementation="boolean" default-value="false">${cobertura.force}</forceMojoExecution>
        <maxmem implementation="java.lang.String" default-value="64m">${cobertura.maxmem}</maxmem>
        <mojoExecution implementation="org.apache.maven.plugin.MojoExecution" default-value="${mojoExecution}"/>
        <pluginClasspathList implementation="java.util.List" default-value="${plugin.artifacts}"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <quiet implementation="boolean" default-value="false">${quiet}</quiet>
        <skip implementation="boolean" default-value="false">${cobertura.skip}</skip>
      </configuration>
    </mojo>
    <mojo>
      <goal>cobertura</goal>
      <description>Instrument the compiled classes, run the unit tests and generate a Cobertura
report.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <executePhase>test</executePhase>
      <executeLifecycle>cobertura</executeLifecycle>
      <implementation>org.codehaus.mojo.cobertura.CoberturaReportMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>aggregate</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Generate aggregate reports in multi-module projects.</description>
        </parameter>
        <parameter>
          <name>dataFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;p&gt;
The Datafile Location.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <since>2.4</since>
          <required>false</required>
          <editable>true</editable>
          <description>The encoding for the java source code files.</description>
        </parameter>
        <parameter>
          <name>format</name>
          <type>java.lang.String</type>
          <deprecated>No reason given</deprecated>
          <required>false</required>
          <editable>true</editable>
          <description>The format of the report. Supports &apos;html&apos; or &apos;xml&apos;. Defaults to &apos;html&apos;.</description>
        </parameter>
        <parameter>
          <name>formats</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>The formats of the report. Can be &apos;html&apos; and/or &apos;xml&apos;. Defaults to &apos;html&apos;.</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum memory to pass to the JVM for Cobertura processes.</description>
        </parameter>
        <parameter>
          <name>omitGplFiles</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to remove GPL licensed files from the generated report.
This is required to distribute the report as part of a distribution,
which is licensed under the ASL, or a similar license, which is
incompatible with the GPL.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The output directory for the report.</description>
        </parameter>
        <parameter>
          <name>pluginClasspathList</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;i&gt;Maven Internal&lt;/i&gt;: List of artifacts for the plugin.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;i&gt;Maven Internal&lt;/i&gt;: Project to interact with.</description>
        </parameter>
        <parameter>
          <name>quiet</name>
          <type>boolean</type>
          <since>2.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>Only output Cobertura errors, avoid info messages.</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>List of maven project of the current build</description>
        </parameter>
      </parameters>
      <configuration>
        <aggregate implementation="boolean" default-value="false">${cobertura.aggregate}</aggregate>
        <dataFile implementation="java.io.File" default-value="${project.build.directory}/cobertura/cobertura.ser">${cobertura.datafile}</dataFile>
        <encoding implementation="java.lang.String" default-value="UTF-8">${project.build.sourceEncoding}</encoding>
        <format implementation="java.lang.String">${cobertura.report.format}</format>
        <maxmem implementation="java.lang.String">${cobertura.maxmem}</maxmem>
        <omitGplFiles implementation="boolean" default-value="false">${cobertura.omitGplFiles}</omitGplFiles>
        <outputDirectory implementation="java.io.File" default-value="${project.reporting.outputDirectory}/cobertura"/>
        <pluginClasspathList implementation="java.util.List" default-value="${plugin.artifacts}"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <quiet implementation="boolean" default-value="false">${quiet}</quiet>
        <reactorProjects implementation="java.util.List">${reactorProjects}</reactorProjects>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.doxia.siterenderer.Renderer</role>
          <field-name>siteRenderer</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>cobertura-integration-test</goal>
      <description>Instrument the compiled classes, run the unit tests and integration tests
and generate a Cobertura report.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <executePhase>verify</executePhase>
      <executeLifecycle>cobertura</executeLifecycle>
      <implementation>org.codehaus.mojo.cobertura.CoberturaReportIntegrationTestMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>aggregate</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Generate aggregate reports in multi-module projects.</description>
        </parameter>
        <parameter>
          <name>dataFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;p&gt;
The Datafile Location.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <since>2.4</since>
          <required>false</required>
          <editable>true</editable>
          <description>The encoding for the java source code files.</description>
        </parameter>
        <parameter>
          <name>format</name>
          <type>java.lang.String</type>
          <deprecated>No reason given</deprecated>
          <required>false</required>
          <editable>true</editable>
          <description>The format of the report. Supports &apos;html&apos; or &apos;xml&apos;. Defaults to &apos;html&apos;.</description>
        </parameter>
        <parameter>
          <name>formats</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>The formats of the report. Can be &apos;html&apos; and/or &apos;xml&apos;. Defaults to &apos;html&apos;.</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum memory to pass to the JVM for Cobertura processes.</description>
        </parameter>
        <parameter>
          <name>omitGplFiles</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to remove GPL licensed files from the generated report.
This is required to distribute the report as part of a distribution,
which is licensed under the ASL, or a similar license, which is
incompatible with the GPL.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The output directory for the report.</description>
        </parameter>
        <parameter>
          <name>pluginClasspathList</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;i&gt;Maven Internal&lt;/i&gt;: List of artifacts for the plugin.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;i&gt;Maven Internal&lt;/i&gt;: Project to interact with.</description>
        </parameter>
        <parameter>
          <name>quiet</name>
          <type>boolean</type>
          <since>2.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>Only output Cobertura errors, avoid info messages.</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>List of maven project of the current build</description>
        </parameter>
      </parameters>
      <configuration>
        <aggregate implementation="boolean" default-value="false">${cobertura.aggregate}</aggregate>
        <dataFile implementation="java.io.File" default-value="${project.build.directory}/cobertura/cobertura.ser">${cobertura.datafile}</dataFile>
        <encoding implementation="java.lang.String" default-value="UTF-8">${project.build.sourceEncoding}</encoding>
        <format implementation="java.lang.String">${cobertura.report.format}</format>
        <maxmem implementation="java.lang.String">${cobertura.maxmem}</maxmem>
        <omitGplFiles implementation="boolean" default-value="false">${cobertura.omitGplFiles}</omitGplFiles>
        <outputDirectory implementation="java.io.File" default-value="${project.reporting.outputDirectory}/cobertura"/>
        <pluginClasspathList implementation="java.util.List" default-value="${plugin.artifacts}"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <quiet implementation="boolean" default-value="false">${quiet}</quiet>
        <reactorProjects implementation="java.util.List">${reactorProjects}</reactorProjects>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.doxia.siterenderer.Renderer</role>
          <field-name>siteRenderer</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>dump-datafile</goal>
      <description>Output the contents of Cobertura&apos;s data file to the command line.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.mojo.cobertura.CoberturaDatafileDumpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>dataFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;p&gt;
The Datafile Location.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>forceMojoExecution</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>true</required>
          <editable>true</editable>
          <description>Usually most of our Cobertura mojos will not get executed on parent poms.
Setting this parameter to &lt;code&gt;true&lt;/code&gt; will force
the execution of this mojo, even if it would usually get skipped in this case.</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum memory to pass to the JVM for Cobertura processes.</description>
        </parameter>
        <parameter>
          <name>mojoExecution</name>
          <type>org.apache.maven.plugin.MojoExecution</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>pluginClasspathList</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;i&gt;Maven Internal&lt;/i&gt;: List of artifacts for the plugin.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;i&gt;Maven Internal&lt;/i&gt;: Project to interact with.</description>
        </parameter>
        <parameter>
          <name>quiet</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Only output Cobertura errors, avoid info messages.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>When &lt;code&gt;true&lt;/code&gt;, skip the execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <dataFile implementation="java.io.File" default-value="${project.build.directory}/cobertura/cobertura.ser">${cobertura.datafile}</dataFile>
        <forceMojoExecution implementation="boolean" default-value="false">${cobertura.force}</forceMojoExecution>
        <maxmem implementation="java.lang.String" default-value="64m">${cobertura.maxmem}</maxmem>
        <mojoExecution implementation="org.apache.maven.plugin.MojoExecution" default-value="${mojoExecution}"/>
        <pluginClasspathList implementation="java.util.List" default-value="${plugin.artifacts}"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <quiet implementation="boolean" default-value="false">${quiet}</quiet>
        <skip implementation="boolean" default-value="false">${cobertura.skip}</skip>
      </configuration>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on cobertura-maven-plugin.&lt;br&gt;
Call &lt;code&gt;mvn cobertura:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/code&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.mojo.cobertura.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>instrument</goal>
      <description>Instrument the compiled classes.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.mojo.cobertura.CoberturaInstrumentMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>attach</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies whether or not to attach the Cobertura artifact to the project.</description>
        </parameter>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the classifier to use for the attached ser artifact.</description>
        </parameter>
        <parameter>
          <name>dataFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;p&gt;
The Datafile Location.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>forceMojoExecution</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>true</required>
          <editable>true</editable>
          <description>Usually most of our Cobertura mojos will not get executed on parent poms.
Setting this parameter to &lt;code&gt;true&lt;/code&gt; will force
the execution of this mojo, even if it would usually get skipped in this case.</description>
        </parameter>
        <parameter>
          <name>instrumentation</name>
          <type>org.codehaus.mojo.cobertura.configuration.ConfigInstrumentation</type>
          <required>false</required>
          <editable>true</editable>
          <description>The &lt;a href=&quot;usage.html#Instrumentation&quot;&gt;Instrumentation Configuration&lt;/a&gt;.</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Maximum memory to pass to the JVM for Cobertura processes.</description>
        </parameter>
        <parameter>
          <name>mojoExecution</name>
          <type>org.apache.maven.plugin.MojoExecution</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>pluginClasspathList</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;i&gt;Maven Internal&lt;/i&gt;: List of artifacts for the plugin.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>&lt;i&gt;Maven Internal&lt;/i&gt;: Project to interact with.</description>
        </parameter>
        <parameter>
          <name>quiet</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Only output Cobertura errors, avoid info messages.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>When &lt;code&gt;true&lt;/code&gt;, skip the execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <attach implementation="boolean" default-value="false">${cobertura.attach}</attach>
        <classifier implementation="java.lang.String" default-value="cobertura">${cobertura.classifier}</classifier>
        <dataFile implementation="java.io.File" default-value="${project.build.directory}/cobertura/cobertura.ser">${cobertura.datafile}</dataFile>
        <forceMojoExecution implementation="boolean" default-value="false">${cobertura.force}</forceMojoExecution>
        <instrumentation implementation="org.codehaus.mojo.cobertura.configuration.ConfigInstrumentation">${instrumentation}</instrumentation>
        <maxmem implementation="java.lang.String" default-value="64m">${cobertura.maxmem}</maxmem>
        <mojoExecution implementation="org.apache.maven.plugin.MojoExecution" default-value="${mojoExecution}"/>
        <pluginClasspathList implementation="java.util.List" default-value="${plugin.artifacts}"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <quiet implementation="boolean" default-value="false">${quiet}</quiet>
        <skip implementation="boolean" default-value="false">${cobertura.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>factory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
      </requirements>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>net.sourceforge.cobertura</groupId>
      <artifactId>cobertura</artifactId>
      <type>jar</type>
      <version>2.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <type>jar</type>
      <version>5.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-tree</artifactId>
      <type>jar</type>
      <version>5.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-commons</artifactId>
      <type>jar</type>
      <version>5.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-util</artifactId>
      <type>jar</type>
      <version>5.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-analysis</artifactId>
      <type>jar</type>
      <version>5.0.1</version>
    </dependency>
    <dependency>
      <groupId>oro</groupId>
      <artifactId>oro</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <type>jar</type>
      <version>1.8.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant-launcher</artifactId>
      <type>jar</type>
      <version>1.8.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant-junit</artifactId>
      <type>jar</type>
      <version>1.8.3</version>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>servlet-api-2.5</artifactId>
      <type>jar</type>
      <version>6.1.14</version>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty</artifactId>
      <type>jar</type>
      <version>6.1.14</version>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty-util</artifactId>
      <type>jar</type>
      <version>6.1.14</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.7.5</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <type>jar</type>
      <version>1.0.13</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <type>jar</type>
      <version>1.0.13</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.3.2</version>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <type>jar</type>
      <version>2.11.0</version>
    </dependency>
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <type>jar</type>
      <version>1.4.01</version>
    </dependency>
    <dependency>
      <groupId>jaxen</groupId>
      <artifactId>jaxen</artifactId>
      <type>jar</type>
      <version>1.1.4</version>
    </dependency>
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom</artifactId>
      <type>jar</type>
      <version>1.1.3</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.cobertura</groupId>
      <artifactId>cobertura-runtime</artifactId>
      <type>pom</type>
      <version>2.1.1</version>
    </dependency>
    <dependency>
      <groupId>urbanophile</groupId>
      <artifactId>java-getopt</artifactId>
      <type>jar</type>
      <version>1.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-file</artifactId>
      <type>jar</type>
      <version>1.0-beta-2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-parameter-documenter</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-http-lightweight</artifactId>
      <type>jar</type>
      <version>1.0-beta-2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-http-shared</artifactId>
      <type>jar</type>
      <version>1.0-beta-2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-beta-2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <type>jar</type>
      <version>1.0-alpha-9-stable-1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-error-diagnostics</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-ssh-external</artifactId>
      <type>jar</type>
      <version>1.0-beta-2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-ssh-common</artifactId>
      <type>jar</type>
      <version>1.0-beta-2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-descriptor</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interactivity-api</artifactId>
      <type>jar</type>
      <version>1.0-alpha-4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-manager</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-monitor</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-ssh</artifactId>
      <type>jar</type>
      <version>1.0-beta-2</version>
    </dependency>
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch</artifactId>
      <type>jar</type>
      <version>0.1.27</version>
    </dependency>
    <dependency>
      <groupId>classworlds</groupId>
      <artifactId>classworlds</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-api</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-sink-api</artifactId>
      <type>jar</type>
      <version>1.0-alpha-9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-registry</artifactId>
      <type>jar</type>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-impl</artifactId>
      <type>jar</type>
      <version>2.0.4.2</version>
    </dependency>
    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <type>jar</type>
      <version>1.2.0</version>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <type>jar</type>
      <version>1.7.0</version>
    </dependency>
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <type>jar</type>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <type>jar</type>
      <version>1.0.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-core</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-site-renderer</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-i18n</artifactId>
      <type>jar</type>
      <version>1.0-beta-7</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-velocity</artifactId>
      <type>jar</type>
      <version>1.1.7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
      <type>jar</type>
      <version>1.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-decoration-model</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <type>jar</type>
      <version>3.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-module-apt</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-module-fml</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-module-xdoc</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-module-xhtml</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <type>jar</type>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>2.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-invoker</artifactId>
      <type>jar</type>
      <version>2.0.11</version>
    </dependency>
    <dependency>
      <groupId>jtidy</groupId>
      <artifactId>jtidy</artifactId>
      <type>jar</type>
      <version>4aug2000r7-dev</version>
    </dependency>
  </dependencies>
</plugin>